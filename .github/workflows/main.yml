name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: astral-sh/setup-uv@v3
      - run: uv python install 3.12
      - run: |
          uv sync --all-extras --frozen --no-install-project
          uv run ruff format . --check
          uv run ruff check . --no-fix
          uv run mypy .

  pytest:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: astral-sh/setup-uv@v3
      - run: uv python install 3.13
      - run: |
          uv sync --all-extras --frozen --no-install-project
          uv run alembic upgrade head
          uv run pytest . --cov=. --cov-report xml
        env:
          ENVIRONMENT: dev
          PYTHONDONTWRITEBYTECODE: 1
          PYTHONUNBUFFERED: 1
          DB_HOST: 127.0.0.1
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.0.1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-${{ matrix.python-version }}
